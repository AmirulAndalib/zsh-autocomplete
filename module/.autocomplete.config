#!/bin/zsh

.autocomplete.config.precmd() {
  emulate zsh; setopt $_autocomplete__options
  add-zsh-hook -d precmd .autocomplete.config.precmd

  zmodload -F zsh/zutil b:zstyle

  if (( ${#$(zstyle -L ':autocomplete:list-choices:*')} > 0 )); then
    print -u2 \
      'Warning: `zstyle '':autocomplete:list-choices:*''` settings are no longer supported.'
    print -u2 'Please use `zstyle '':autocomplete:*''` for these settings instead.'
  fi

  # Remove incompatible settings.
  zstyle -d ':completion:*:functions' ignored-patterns
  zstyle -d ':completion:*:*:*:*:*' menu
  zstyle -d '*' single-ignored
  zstyle -d ':completion:*' special-dirs

  local -a completers=( _expand _complete _autocomplete.history_words _correct _ignored )
  zstyle ':completion:*' completer _autocomplete.oldlist $completers[@]
  zstyle ':completion:history-incremental-*search-*:*' completer _autocomplete.history_lines
  zstyle ':completion:list-choices:*' completer $completers[@]
  zstyle ':completion:list-expand:*' completer $completers[@]

  local base='m:{[:lower:][:upper:][:punct:]}={[:upper:][:lower:][:punct:]}'
  zstyle ':completion:*:complete:*' matcher-list "r:|?=** $base"
  zstyle ':completion:list-expand:complete:*' matcher 'l:|=*'
  local -a commands_=(
    parameters
    '*directories' '*files' executables
    builtins commands functions reserved-words jobs
    aliases suffix-aliases
  )
  zstyle ':completion:*:('${(j:|:)commands_}')' \
    matcher "l:?|=[[:punct:]] r:|[[:punct:]]=** m:{[:lower:][:punct:]}={[:upper:][:punct:]} x:"
  zstyle ":completion:*:packages" matcher "l:|=* $base x:"

  zstyle ':completion:*:(functions|parameters)' ignored-patterns '[[:punct:]]*[[:alnum:]]*'
  zstyle ':completion:*:(alias-expansions|history-(lines|words)|requoted|unambiguous)' \
    ignore-line current
  zstyle ':completion:*' ignore-parents 'parent pwd directory'

  zstyle ':completion:*' sort yes
  zstyle ':completion:*:(executables|*directories|*files)' sort no
  zstyle ':completion:*:(options|values)' sort no

  zstyle ':completion:*' group-name ''

  zstyle ':completion:*' group-order \
    options arguments values \
    local-directories executables files \
    directories ancestor-directories recent-directories path-directories \
    recent-files
  zstyle -e ':completion:*:complete:*' tag-order '
    if [[ CURRENT -ne 1 && $compstate[context] == (command|condition) &&
        $PREFIX$SUFFIX == [-+]* ]]; then
      reply=( "(|*-)argument-* (|*-)option[-+]* values" options - )
    else
      reply=( "! values options *files *directories" "*files *directories" - )
    fi
  '
  zstyle ':completion:*:(approximate|correct):*' tag-order '! original' -
  zstyle ':completion:*:expand:*' tag-order '! all-expansions original' -

  _autocomplete__lowercase() { REPLY=${(L)REPLY} }
  zstyle ':completion:*' file-patterns '
    *(D-/o+_autocomplete__lowercase):local-directories:"local directory"
    *(D-^/O+_autocomplete__lowercase):files:file
  '
  zstyle ':completion:*:-command-:*' file-patterns '
    *(D-*O+_autocomplete__lowercase):executables:"executable file"
    *(D-/o+_autocomplete__lowercase):local-directories:"local directory"
  '

  zstyle -e ':completion:*' glob 'reply=( "true" ); _autocomplete.is_glob || reply=( "false" )'
  zstyle ':completion:*' expand suffix
  zstyle ':completion:*' keep-prefix false
  zstyle ':completion:*' prefix-needed false
  zstyle ':completion:*' list-suffixes true
  zstyle ':completion:*' accept-exact-dirs true
  zstyle ':completion:*' path-completion true

  zstyle -d ':completion:*:default' list-prompt ''
  unset LISTPROMPT
  zstyle ':completion:*:default' menu 'yes' 'select'
  zstyle ':completion:list-choices:*:default' menu 'no' 'no-select'
  zstyle ':completion:*:default' select-prompt ''
  zstyle ':completion:*:default' select-scroll 0

  zstyle ':completion:*:history-lines' format ''

  local null
  if zstyle -s :autocomplete:tab: completion null; then
    print -u2 'Warning: `zstyle '':autocomplete:*'' groups always` is no longer supported.'
    print -u2 'Please use `zstyle '':completion:*'' group-name ''''` instead.'
  fi

  zstyle ':completion:*:default' list-rows-first yes

  local h1=$'%{\e[01;02;39m%}' end=$'%{\e[0m%}' hint=$'%{\e[22;02;39m%}' kbd=$'%{\e[22;39m%}'
  zstyle ':completion:*:descriptions' format "$h1%d$end"
  zstyle ':completion:*:messages' format "$h1%d$end"
  zstyle -e ':completion:*:warnings' format '
    local d=${${(j:, :)_lastdescr[@]:#}/(#m)*, /$MATCH[1,-3] or }
    reply=( "'$h1'No ${tail:+matching }$d completions found.'$end'" )'
  zstyle ':completion:*:(alias-expansions|requoted|unambiguous)' format \
    "$h1%d$hint  (press ${kbd}Shift${hint}+${kbd}Tab$hint to insert)$end"
  zstyle ':completion:*' auto-description '%d'

  zstyle ':completion:*' add-space yes
  zstyle ':completion:*:default' list-packed yes
  zstyle ':completion:*' max-matches-width $COLUMNS
  zstyle ':completion:*' use-cache yes
  zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zcompcache"
}

add-zsh-hook precmd .autocomplete.config.precmd
