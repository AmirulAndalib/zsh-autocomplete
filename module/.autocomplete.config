#!/bin/zsh

.autocomplete.config.precmd() {
  emulate -L zsh -o extendedglob -o rcquotes
  add-zsh-hook -d precmd .autocomplete.config.precmd

  zmodload zsh/zutil  # `zstyle` builtin

  if (( ${#$(zstyle -L ':autocomplete:list-choices:*')} > 0 )); then
    print -u2 \
      'Warning: `zstyle '':autocomplete:list-choices:*''` settings are no longer supported.'
    print -u2 'Please use `zstyle '':autocomplete:*''` for these settings instead.'
  fi

  # Remove incompatible settings.
  zstyle -d ':completion:*:functions' ignored-patterns
  zstyle -d ':completion:*:*:*:*:*' menu
  zstyle -d '*' single-ignored
  zstyle -d ':completion:*' special-dirs

  local -a completers=(
    _complete:-left _correct _complete:-fuzzy _ignored _autocomplete.history_words )
  zstyle ':completion:*' completer _autocomplete.oldlist _expand _complete "$completers[@]"
  zstyle ':completion:list-expand:*' completer _expand "$completers[@]"

  zstyle ':completion:*:complete(|-left):*' matcher-list '
    l:|=** m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}'
  zstyle -e ':completion:*:complete:*' ignored-patterns '
    reply=( "^(${(b)_autocomplete__head}(#i)${(b)_autocomplete__tail}*)" )
    if [[ -z "$_autocomplete__tail" ]]; then
      reply=( "${(b)_autocomplete__head}[^[:alnum:]]*" )
    elif [[ $_autocomplete__punct == . ]]; then
      reply=( "^(${(b)_autocomplete__head}*(#i)${(b)_autocomplete__tail}*)" )
    elif [[ -n "$_autocomplete__punct" && -z "$_autocomplete__alnum" ]]; then
      reply=( "^(${(b)_autocomplete__head}${(b)_autocomplete__punct}*)" )
    fi'
  zstyle -e ':completion:*:complete-left:*' ignored-patterns '
    reply=( "${(b)_autocomplete__head}[^[:alnum:]]*" )
    [[ -n "$_autocomplete__punct" ]] &&
      reply=( "${(b)_autocomplete__head}([^[:alnum:]]*~${(b)_autocomplete__tail}*)" )'

  zstyle ':completion:*:(complete-fuzzy|autocomplete.history-words):*' matcher-list '
    r:|?=** m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}'
  zstyle -e ':completion:*:complete-fuzzy:*' ignored-patterns '
    reply=( "${(b)_autocomplete__head}[^[:alnum:]]*" )
    [[ -n "$_autocomplete__punct" ]] &&
      reply=( "${(b)_autocomplete__head}([^[:alnum:]]*~${(b)_autocomplete__punct[1]}*)" )'

  zstyle ':completion:*:(alias-expansions|history-(lines|words)|requoted|unambiguous)' \
    ignore-line current
  zstyle ':completion:*:complete*:*:history-(lines|words)' ignored-patterns ''
  zstyle ':completion:*:complete*:*:unambiguous' ignored-patterns '(?|??)'

  zstyle ':completion:*' group-order '
    local-directories directories path-directories recent-directories
    files recent-files
    history-words'
  zstyle ':completion:*:-command-:*' group-order builtins
  zstyle -e ':completion:*:-command-:*' tag-order '
    [[ $words[CURRENT] == (|.) ]] &&
      reply=( executables local-directories - )
    '
  zstyle ':completion:*:cd:*' group-order local-directories
  zstyle ':completion:*:cd:*' tag-order local-directories '! path-directories'
  zstyle ':completion:*:(approximate|correct):*' tag-order '! original' -
  zstyle ':completion:*:expand:*' tag-order '! all-expansions original' -

  zstyle ':completion:*' file-patterns '
    *(#qD-/):local-directories:"local directory"
    *(#qD-^/):files:file'

  zstyle -e ':completion:*' glob 'reply=( "true" ) && _autocomplete.is_glob || reply=( "false" )'
  zstyle ':completion:*' expand prefix suffix
  zstyle ':completion:*' keep-prefix false
  zstyle ':completion:*' prefix-needed false
  zstyle ':completion:*' list-suffixes true
  zstyle ':completion:*' accept-exact-dirs true
  zstyle ':completion:*' path-completion true

  zstyle -d ':completion:*:default' list-prompt ''
  unset LISTPROMPT
  zstyle ':completion:*:default' menu 'yes' 'select'
  zstyle ':completion:list-choices:*:default' menu 'no' 'no-select'
  zstyle ':completion:*:default' select-prompt ''
  zstyle ':completion:*:default' select-scroll 0

  zstyle ':completion:history-search:*:history-lines' format ''

  local null
  if zstyle -s :autocomplete:tab: completion null; then
    print -u2 'Warning: `zstyle '':autocomplete:*'' groups always` is no longer supported.'
    print -u2 'Please use `zstyle '':completion:*'' group-name ''''` instead.'
  fi

  zstyle ':completion:*' group-name ''
  zstyle ':completion:*' list-rows-first 'yes'

  local h1=$'%{\e[01;02;39m%}'
  local end=$'%{\e[0m%}'
  zstyle ':completion:*:descriptions' format "$h1%d:$end"

  local hint=$'%{\e[22;02;39m%}'
  local kbd=$'%{\e[22;39m%}'
  local backtab="press ${kbd}Shift${hint}+${kbd}Tab$hint to insert"
  zstyle ':completion:*:(alias-expansions|requoted|unambiguous)' format \
    "$h1%d:${hint}  ($backtab)$end"
  zstyle ':completion:*:history-lines' format \
    "$h1%d:${hint}  ($backtab; press ${kbd}â†‘$hint or ${kbd}PgUp$hint for more)$end"

  zstyle ':completion:*:infos' format '%F{y}%d%f'
  zstyle ':completion:*:messages' format '%F{r}%d%f'
  zstyle ':completion:*:warnings' format '%F{y}%d%f'
  zstyle ':completion:*:errors' format '%F{r}%d%f'

  zstyle ':completion:*' auto-description '%d'

  zstyle ':completion:*' add-space true
  zstyle ':completion:*:default' list-packed true
  zstyle ':completion:*' sort no
  zstyle ':completion:*' use-cache true
}

add-zsh-hook precmd .autocomplete.config.precmd
