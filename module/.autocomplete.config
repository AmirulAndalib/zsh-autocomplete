#!/bin/zsh
emulate -LR zsh -o noshortloops -o warncreateglobal -o extendedglob
add-zsh-hook precmd .autocomplete.config.precmd

.autocomplete.config.precmd() {
  emulate -LR zsh -o noshortloops -o warncreateglobal -o extendedglob
  add-zsh-hook -d precmd .autocomplete.config.precmd

  zmodload -i zsh/zutil  # `zstyle` builtin

  # Remove incompatible styles.
  zstyle -d ':completion:*' format
  zstyle -d ':completion:*:descriptions' format
  zstyle -d ':completion:*' group-name
  zstyle -d ':completion:*:functions' ignored-patterns
  zstyle -d '*' single-ignored
  zstyle -d ':completion:*' special-dirs

  local -a completers=( _expand _complete _complete:-left _correct _ignored _complete:-fuzzy )
  zstyle ':completion:*' completer _autocomplete.oldlist $completers[@]
  zstyle ':completion:list-expand:*' completer $completers[@]
  zstyle ':completion:expand-word:*' completer _autocomplete.oldlist _autocomplete.extras

  zstyle ':completion:*:complete:*' matcher-list '
    l:|=**' '+m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}'
  zstyle -e ':completion:*:complete:*' ignored-patterns '
    local prefix=${(M)${words[CURRENT]}##*/}
    local suffix=${${words[CURRENT]}##*/}
    local punct=${(M)suffix##[^[:alnum:]]##}
    local nonpunct=${suffix##[^[:alnum:]]##}
    if [[ -n $punct ]]; then
      reply=( "${(b)prefix}${punct}[^[:alnum:]]*" "^(${(b)prefix}*${punct}(#i)${(b)nonpunct}*)" )
    else
      reply=( "${(b)prefix}[^[:alnum:]]*" "^(${(b)prefix}(#i)${(b)suffix}*)" )
    fi'

  zstyle ':completion:*:complete-left:*' matcher-list '
    l:|=** m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}'
  zstyle -e ':completion:*:complete-left:*' ignored-patterns '
    local prefix=${(M)${words[CURRENT]}##*/}
    local suffix=${${words[CURRENT]}##*/}
    local punct=${(M)suffix##[^[:alnum:]]##}
    local nonpunct=${suffix##[^[:alnum:]]##}
    if [[ -n $punct ]]; then
      reply=( "${(b)prefix}([^[:alnum:]]~${punct})*" )
    else
      reply=( "${(b)prefix}[^[:alnum:]]*" )
    fi'

  zstyle ':completion:*:complete-fuzzy:*' matcher-list '
    r:|?=** m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}'
  zstyle -e ':completion:*:complete-fuzzy:*' ignored-patterns '
    local prefix=${(M)${words[CURRENT]}##*/}
    local suffix=${${words[CURRENT]}##*/}
    local punct=${(M)suffix##[^[:alnum:]]##}
    local nonpunct=${suffix##[^[:alnum:]]##}
    if [[ -n $punct ]]; then
      reply=( "^(${(b)prefix}*${punct}(#i)${(b)nonpunct[1]}*)" )
    else
      reply=( "^(${(b)prefix}(#i)${(b)suffix[1]}*)" )
    fi'

  zstyle ':completion:*:complete*:recent-dirs' ignored-patterns '/'

  zstyle ':completion:*:(-command-|cd|z):*' tag-order '! users' '-'
  zstyle ':completion:*:(approximate|correct):*' tag-order '! original' '-'
  zstyle ':completion:*:expand:*' tag-order '! all-expansions original' '-'

  autoload -Uz zmathfunc && zmathfunc  # `min` function
  zstyle -e ':completion:*' max-errors '
    if [[ -z $SUFFIX && -n $QIPREFIX && -n $QISUFFIX ]]; then
      reply=( "0" )
    else
      reply=( "$(( min(7, (${#PREFIX} + ${#SUFFIX} - 1) / 2) ))" )
    fi
    reply+=( "numeric" )'

  zstyle -e ':completion:*' glob 'reply=( "true" ) && _autocomplete.is_glob || reply=( "false" )'
  zstyle ':completion:*' expand prefix suffix
  zstyle ':completion:*' list-suffixes true
  zstyle ':completion:*' path-completion true

  zstyle ':completion:*' menu 'yes select=long-list'
  zstyle ':completion:expand-word:*' menu ''
  zstyle ':completion:list-choices:*' menu ''

  if zstyle -m ":autocomplete:tab:" completion 'insert'; then
    zstyle ':completion:*:complete:*' show-ambiguity '07'
  fi

  zstyle ':completion:*' list-dirs-first true
  zstyle ':completion:*:(directories|*-directories|directory-*)' group-name 'directories'
  zstyle ':completion:*' group-order 'directories'

  if zstyle -t ':autocomplete:' groups 'always'; then
    zstyle ':completion:*' format '%F{yellow}%d:%f'
    zstyle ':completion:*' group-name ''
  fi

  zstyle ':completion:*:messages' format '%F{blue}%d%f'
  zstyle ':completion:*:warnings' format '%F{red}%d%f'

  zstyle ':completion:*:recent-(dirs|files)' group-name ''

  zstyle ':completion:*:(requoted|unambiguous)' group-name ''

  zstyle ':completion:*' auto-description '%F{yellow}%d%f'

  zstyle ':completion:*' add-space true
  zstyle ':completion:*' list-packed true
  zstyle ':completion:*' list-separator ''
  zstyle ':completion:*' use-cache true

  zstyle ':completion:correct-word:*' completer _complete _correct
  zstyle ':completion:correct-word:*' matcher-list ''
  zstyle ':completion:correct-word:*' ignored-patterns '[^[:alnum:]]*'
  zstyle -e ':completion:correct-word:complete:*' ignored-patterns 'reply=( "^(${words[CURRENT]})" )'
  zstyle ':completion:correct-word:*:git-*:argument-*:*' tag-order '-'
  zstyle ':completion:correct-word:*' accept-exact true
  zstyle ':completion:correct-word:*' add-space false
  zstyle ':completion:correct-word:*' glob false

  zstyle ':completion:list-expand:*' completer _expand _complete _ignored _approximate
  zstyle ':completion:list-expand:complete:*' matcher-list '
    l:|=** m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}' '+r:|?=**'
  zstyle ':completion:list-expand:complete:*' ignored-patterns ''
  zstyle ':completion:list-expand:complete:*:recent-dirs' ignored-patterns '/'
  zstyle ':completion:list-expand:*' tag-order '*'
  zstyle ':completion:list-expand:*' format '%F{yellow}%d:%f'
  zstyle ':completion:list-expand:*' group-name ''
  zstyle ':completion:list-expand:*' extra-verbose true
  zstyle ':completion:list-expand:*' list-separator '-'
  zstyle ':completion:list-expand:*' menu 'yes select'
}
