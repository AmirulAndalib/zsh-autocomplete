#autoload

_autocomplete.history_lines() {
  local tag=history-lines
  _tags $tag
  _tags && _requested $tag ||
    return 1

  local -aU events=()
  local -i max_lines=$(( min( 16, HISTNO, LINES - BUFFERLINES ) ))
  if [[ -z $BUFFER ]]; then
    local query='<-16>'; [[ $curcontext == *-forward:* ]] ||
      query="<$(( HISTNO - max_lines ))->"
    print -v events -f "%$#HISTNO.${#HISTNO}s  %s" "${(kv@)history[(I)$~query]}"
    [[ $curcontext == *-incremental-*-forward:* ]] &&
      events=( "${(Oa@)events}" )
  else
    local -aU matches=() queries reply
    if [[ $curcontext == *-incremental-*:* ]]; then
      local prefix="$IPREFIX$PREFIX" suffix="$SUFFIX$ISUFFIX"
      local word="$prefix$suffix"
      local lbuffer="${LBUFFER%%$prefix}$QIPREFIX"
      local rbuffer="$QISUFFIX${RBUFFER##$suffix}"
      queries=( "${(b)lbuffer}*((#ia"{0..$(( min(7, $#word / 3) ))}")${(b)word})*${(b)rbuffer}" )
    else
      queries=( '(#ia'{0..$(( min(7, $#words / 3) ))}')*'${words[CURRENT]//$'\0'/*}'*' )
    fi
    local q; for q in $queries[@]; do
      matches=()
      print -v matches -f "%$#HISTNO.${#HISTNO}s  %s" "${(kv@)history[(R)$~q]}"

      # If there's only 1 match, `print` somehow changes `matches` to a scalar.
      # So, we cast it back to an array.
      matches=( $matches[@] )

      [[ $matches == [[:space:]]# ]] &&
        continue
      [[ $curcontext == *-incremental-*-forward:* ]] &&
        matches=( "${(Oa@)matches}" )
      (( $#events[@] + $#matches[@] > max_lines )) &&
        matches=( "${(@)matches[1,max_lines - $#events[@]]}" )
      events+=( "$matches[@]" )
      (( $#events[@] < max_lines )) ||
        break
    done
    (( $#events[@] > max_lines )) &&
      events=( ${(@)events[1,max_lines]} )
  fi

  local -a sopt=( -S '' )
  if [[ $curcontext = history-search:* ]]; then
    events=( ${(Oa@)events} )
    sopt=( -S ';' -R _autocomplete.history_lines.suffix )
  fi

  local MATCH; local -i MBEGIN MEND
  local -a displays=(
    "${(@)events[@]:/(#m)*/${(r:COLUMNS-1:)MATCH//(#m)[^[:print:]]##/${${${(q+)MATCH}#\$\'}%\'}}}"
  )

  local -a matches=( "${(@)events[@]##[ [:digit:]](#c$#HISTNO)  }" )
  [[ $curcontext == *-incremental-* ]] &&
    matches=( "${(@)${(@)matches[@]##$lbuffer}[@]%%$rbuffer}" )

  local _comp_no_ignore=1 expl
  _description -2V $tag expl 'history line'
  compadd "$expl[@]" -QU "$sopt[@]" -ld displays -a matches
}

_autocomplete.history_lines.suffix() {
  case $KEYS in
    "$key[Alt] ");
      LBUFFER+=' '
      ;&
    $key[ControlSpace])
      ;;
    *)
      LBUFFER=$LBUFFER[1,$(( -1 - $1 ))]
      ;;
  esac
}

_autocomplete.history_lines "$@"
